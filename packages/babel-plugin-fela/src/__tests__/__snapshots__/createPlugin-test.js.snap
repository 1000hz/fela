// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Using babel-plugin-fela should precompile static styles 1`] = `
"import { createComponent } from 'react-fela';

const rule = ({ fontSize, padding }, renderer) => {
  if (!renderer.cache.abcd) {
    renderer.cache.abcd = {
      type: 'PRECOMPILATION',
      className: 'a b c d'
    };
    if (!renderer.cache['colorred']) renderer.cache['colorred'] = {
      type: 'RULE',
      className: 'a',
      selector: '.a',
      declaration: 'color:red',
      media: '',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)backgroundColorred']) renderer.cache['(min-height: 300px)backgroundColorred'] = {
      type: 'RULE',
      className: 'b',
      selector: '.b',
      declaration: 'background-color:red',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px)lineHeight2']) renderer.cache['(min-height: 300px)lineHeight2'] = {
      type: 'RULE',
      className: 'c',
      selector: '.c',
      declaration: 'line-height:2',
      media: '(min-height: 300px)',
      support: ''
    };
    if (!renderer.cache['(min-height: 300px):hovercolorblack']) renderer.cache['(min-height: 300px):hovercolorblack'] = {
      type: 'RULE',
      className: 'd',
      selector: '.d:hover',
      declaration: 'color:black',
      media: '(min-height: 300px)',
      support: ''
    };
  }

  return {
    _className: renderer.cache.abcd.className,

    fontSize,

    '@media (min-height: 300px)': {
      ':hover': {
        paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);"
`;

exports[`Using babel-plugin-fela should prerender static styles as a separate rule 1`] = `
"import { createComponent } from 'react-fela';

const rule = ({ fontSize, padding }, renderer) => {
  if (!renderer.cache.fktg8sm) {
    renderer.cache.fktg8sm = {
      type: 'PRERENDERING',
      className: renderer.renderRule(() => ({
        color: 'red',
        '@media (min-height: 300px)': {
          backgroundColor: 'red',
          lineHeight: 2,
          ':hover': {
            color: 'black'
          }
        }
      }))
    };
  }

  return {
    _className: renderer.cache.fktg8sm.className,

    fontSize, '@media (min-height: 300px)': { ':hover': { paddingLeft: padding
      }
    }
  };
};

export default createComponent(rule);"
`;
